[
  {
    "objectID": "blog_posts.html",
    "href": "blog_posts.html",
    "title": "Grigory Uskov",
    "section": "",
    "text": "Remote workflow (part 1)\n\n\n\nunix\n\nssh\n\n\n\nConnecting to a server via SSH, ProxyJump, ssh-agent and a bash helper script for one-command login\n\n\n\n\n\nMay 14, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nRemote workflow (part 1)\n\n\n\nunix\n\nru\n\n\n\nSSH-подключение к серверу, ProxyJump, ssh-agent и bash-скрипт для мгновенного логина\n\n\n\n\n\nMay 11, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nUseful Links & Materials\n\n\n\nastronomy\n\nstatistics\n\nr\n\npython\n\n\n\nThings Worth Sharing\n\n\n\n\n\nJun 7, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nIRAF: Optical Spectrum Processing\n\n\n\nastronomy\n\niraf\n\nunix\n\n\n\nUsing Data from the RTT-150 Telescope at TUBITAK Observatory\n\n\n\n\n\nAug 18, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nIRAF: Обработка оптических спектров\n\n\n\nastronomy\n\niraf\n\nunix\n\nru\n\n\n\nНа примере данных с телескопа РТТ-150 обсерватории TUBITAK\n\n\n\n\n\nAug 18, 2020\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "publications.html",
    "href": "publications.html",
    "title": "Publications",
    "section": "",
    "text": "2025\n\n  SRGAJ230631.0+155633: an extremely X-ray luminous, heavily obscured, radio-loud quasar at z=0.44 discovered by SRG/ART-XC\n\n\n\n2024\n\n  New Active Galactic Nuclei Detected by the ART-XC and eROSITA Telescopes during the First Five SRG All-Sky X-ray Surveys. Part 2\n  SRG/ART-XC all-sky X-ray survey: Catalog of sources detected during the first five surveys\n\n\n\n2023\n\n  X-ray Properties of the Luminous Quasar PG 1634+706 at z=1.337 from SRG and XMM-Newton Data\n  Optical Identification and Spectroscopic Redshift Measurements of 216 Galaxy Clusters from the SRG/eROSITA All-Sky Survey\n  New Active Galactic Nuclei Detected by the ART-XC and eROSITA Telescopes during the First Five SRG All-Sky X-ray Surveys\n\n\n\n2022\n\n  Identification of three cataclysmic variables detected by the ART-XC and eROSITA telescopes on board the SRG during the all-sky X-ray survey\n  New Active Galactic Nuclei Detected by the ART-XC and eROSITA Telescopes Onboard the SRG Observatory during an All-Sky X-ray Survey\n Search for Distant and X-ray Luminous Quasars during the SRG/eROSITA Sky Survey (the DaLeQo Program). The First Results from Observations at the BTA Telescope\n\n\n\n2021\n\n  First tidal disruption events discovered by SRG/eROSITA: X-ray/optical properties and X-ray luminosity function at z &lt; 0.6\n  Optical Identification of Candidates for Active Galactic Nuclei Detected by the Mikhail Pavlinsky ART-XC Telescope Onboard the SRG Observatory during an All-Sky X-ray Survey"
  },
  {
    "objectID": "talks.html",
    "href": "talks.html",
    "title": "Talks",
    "section": "",
    "text": "VAK 2024\nUV 2023\nKMU 2023\nKMU 2022\nInternational conference High energy astrophysics today and tomorrow - 2021 (HEA-2021)\nKMU 2021"
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing_ru.html",
    "href": "posts/iraf_spec_processing/iraf_spec_processing_ru.html",
    "title": "IRAF: Обработка оптических спектров",
    "section": "",
    "text": "English version"
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing_ru.html#усреднение-bias",
    "href": "posts/iraf_spec_processing/iraf_spec_processing_ru.html#усреднение-bias",
    "title": "IRAF: Обработка оптических спектров",
    "section": "2.1 Усреднение bias",
    "text": "2.1 Усреднение bias\nСоздадим папку со спектральными bias и скопируем их туда\nmkdir biassp\ncp `cat .log | grep '1024 200' | grep bias | grep 0.0000 | grep -v flat | awk '{print$3}'` biassp/\nПроверим bias перед усреднением.\ncd biassp/\nls *.fit &gt; list.biassp\ngedit list.biassp & # для удаления \"плохих\" bias из списка\nds9 &\nxs `cat list.biassp`\nПеред тем как делать усреднение нужно исправить ключи в FITS Header к bias, так как у нас не записан правильный GAIN. Для этого выполним команду\n../bin/repair_tfosc_andor_keys *.fit\nУсредним файлы bias по медиане. Для этого небходимо в IRAF открыть noao.imred.ccdred\u0012\u0012\nepar zerocombine\ninput=@list.biassp\noutput=Biassp2.fits\ncombine=median\nВвести команду:go\nСкопируем Biassp2.fits в папку ../Caldata\ncp Biassp2.fits ../Caldata/\nПерейдем в папку BD+25d4655 и исправвим ключи\n../bin/repair_tfosc_andor_keys *.fit"
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing_ru.html#вычитание-усредненного-bias",
    "href": "posts/iraf_spec_processing/iraf_spec_processing_ru.html#вычитание-усредненного-bias",
    "title": "IRAF: Обработка оптических спектров",
    "section": "2.2 Вычитание усредненного bias",
    "text": "2.2 Вычитание усредненного bias\nВычтем из всех спектров усредненный bias\n../bin/process *.fit | si"
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing_ru.html#усреднение-кадров-плоского-поля",
    "href": "posts/iraf_spec_processing/iraf_spec_processing_ru.html#усреднение-кадров-плоского-поля",
    "title": "IRAF: Обработка оптических спектров",
    "section": "2.3 Усреднение кадров плоского поля",
    "text": "2.3 Усреднение кадров плоского поля\nВ IRAF открываем noao.imred.ccdred\nepar combine\ninput=@list.flat\noutput=flat\ncombine=average\nЗапускаем :go"
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing_ru.html#усреднение-кадров-fear-спектров",
    "href": "posts/iraf_spec_processing/iraf_spec_processing_ru.html#усреднение-кадров-fear-спектров",
    "title": "IRAF: Обработка оптических спектров",
    "section": "2.4 Усреднение кадров FeAr спектров",
    "text": "2.4 Усреднение кадров FeAr спектров\nВ IRAF открываем noao.imred.ccdred\nepar combine\ninput=@list.neon\noutput=neon\ncombine=average"
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing_ru.html#создание-функции-отклика",
    "href": "posts/iraf_spec_processing/iraf_spec_processing_ru.html#создание-функции-отклика",
    "title": "IRAF: Обработка оптических спектров",
    "section": "2.5 Создание функции отклика",
    "text": "2.5 Создание функции отклика\nВ IRAF twodspec.longslit\nepar response\ncalibrat=flat\nnormaliz=flat\nresponse=nflat\nЗапускаем :go"
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing_ru.html#деление-спектра-звезд-на-плоское-поле",
    "href": "posts/iraf_spec_processing/iraf_spec_processing_ru.html#деление-спектра-звезд-на-плоское-поле",
    "title": "IRAF: Обработка оптических спектров",
    "section": "2.6 Деление спектра звезд на плоское поле",
    "text": "2.6 Деление спектра звезд на плоское поле\nВ IRAF imred.ccdred\nepar ccdproc\nimages=@list.sp\nflatcor=yes\nflat=nflat.fits\nЗапускаем :go"
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing_ru.html#построение-дисперсионной-кривой",
    "href": "posts/iraf_spec_processing/iraf_spec_processing_ru.html#построение-дисперсионной-кривой",
    "title": "IRAF: Обработка оптических спектров",
    "section": "2.7 Построение дисперсионной кривой",
    "text": "2.7 Построение дисперсионной кривой\nIRAF twodspec.longslit\nepar identify\nimages=neon.fits\nsection=middle line\ncoordli=linelists$idhenear.dat\ncradius=8\n\nepar reidentify\ncradius=8\ncoordli=linelists$idhenear.dat\nreferenc=neon\nimages=neon\nepar fitcoords\nimages=neon\nУдаляем плохие точки клавишами d p\ny y r\ny``r``r\n\nВсё замечательно вписалось"
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing_ru.html#привязка-спектра-звезды-по-длинам-волн",
    "href": "posts/iraf_spec_processing/iraf_spec_processing_ru.html#привязка-спектра-звезды-по-длинам-волн",
    "title": "IRAF: Обработка оптических спектров",
    "section": "2.8 Привязка спектра звезды по длинам волн",
    "text": "2.8 Привязка спектра звезды по длинам волн\nТрансформируем спектры по найденному в fitcoords решении\nepar transform\ninput=@list.sp\noutput=tr//@list.sp\nfitnames=neon\nЗапускаем :go\n\nВ папке database два файла fcfear, idfear, хотя fitnames=fear"
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing_ru.html#очистка-от-космиков",
    "href": "posts/iraf_spec_processing/iraf_spec_processing_ru.html#очистка-от-космиков",
    "title": "IRAF: Обработка оптических спектров",
    "section": "2.9 Очистка от космиков",
    "text": "2.9 Очистка от космиков\n ~uskov/runTmp/do_cleancrspec trfosc025*.fit"
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing_ru.html#совмещение-спектров-звезды-для-дальнейшего-суммирования",
    "href": "posts/iraf_spec_processing/iraf_spec_processing_ru.html#совмещение-спектров-звезды-для-дальнейшего-суммирования",
    "title": "IRAF: Обработка оптических спектров",
    "section": "2.10 Совмещение спектров звезды для дальнейшего суммирования",
    "text": "2.10 Совмещение спектров звезды для дальнейшего суммирования\nIRAF в пакете iki команда alignspectra\nepar alignspec\nimages=tr//@list.sp\nrefimage=trfosc0254.fit\nprefix=rg\nimreg=[160:670,85:145] # указываем бокс, по которому он будет совмещать спектры для дальнейшего складывания\n\nДля БТА лучше использовать [500:3000,300:700]"
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing_ru.html#комбинирование-совмещенных-спектров",
    "href": "posts/iraf_spec_processing/iraf_spec_processing_ru.html#комбинирование-совмещенных-спектров",
    "title": "IRAF: Обработка оптических спектров",
    "section": "2.11 Комбинирование совмещенных спектров",
    "text": "2.11 Комбинирование совмещенных спектров\nВ IRAF пакет imred.ccdred команда combine\ncombine input=rgtr//@list.sp output=sp.fits"
  },
  {
    "objectID": "posts/remote_workflow_part1/rw1.html",
    "href": "posts/remote_workflow_part1/rw1.html",
    "title": "Remote workflow (part 1)",
    "section": "",
    "text": "Russian version"
  },
  {
    "objectID": "posts/remote_workflow_part1/rw1.html#simplified-authentication",
    "href": "posts/remote_workflow_part1/rw1.html#simplified-authentication",
    "title": "Remote workflow (part 1)",
    "section": "Simplified authentication",
    "text": "Simplified authentication\nTo avoid typing passwords twice, we’ll set up a ProxyJump and key-based authentication.\n\nAutomatic connection via the proxy\nOn your local machine, open the ~/.ssh/config file in any text editor (create it if it doesn’t exist). Suppose you have several main servers with IP addresses 11.6.3.10, 11.6.3.11, etc., your proxy server is at 108.177.126.0, and your username is bob. Then add the following to this file:\nHost 11.6.3.*\n    User bob\n    ProxyJump 108.177.126.0\nNow a simple\nssh 11.6.3.10\ngoes through the proxy automatically—but you still need to enter passwords. Let’s switch to key auth.\n\n\nGenerating an SSH key pair\nGenerate a key on your laptop:\nssh-keygen -t rsa\n\n\n\n\n\n\nRSA vs Ed25519\n\n\n\n\n\nWe recommend using the more modern Ed25519 algorithm instead of RSA, as it generates shorter keys faster and provides equal or stronger cryptographic security at a smaller size. For example:\nssh-keygen -t ed25519\nRSA remains more broadly compatible with legacy servers.\n\n\n\nPress Enter to accept the default file location. You can choose a short passphrase—e.g., 2–3 letters or digits—or leave it empty (not recommended).\nOnce the key pair is generated, you can view the public key with:\ncat ~/.ssh/id_rsa.pub\nNow you need to copy this key to both the proxy server and the main server. Use the following commands:\n# copy the SSH key to the proxy server\nssh-copy-id -i ~/.ssh/id_rsa.pub bob@108.177.126.0\n\n# to the main server\nssh-copy-id -i ~/.ssh/id_rsa.pub bob@11.6.3.10\nIf everything worked correctly, the following command:\nssh 11.6.3.10\nwill prompt only for your short passphrase.\n\n\n\n\n\n\nTip\n\n\n\n\n\nIf you frequently connect to servers, you can use ssh-add to have it automatically supply your SSH keys to ssh without prompting for a passphrase. Useful commands:\n# keep the key loaded for as long as `ssh-agent` runs\nssh-add \n\n# list loaded keys (agent is active if you see keys)\nssh-add -l   \n\n# keep the key in ssh-agent for 8 hours\nssh-add -t 8h\n\n\n\n\n\nAlternative approach\nIf you are connected to your office Wi-Fi or corporate VPN, you are most likely inside the network, so the servers are reachable without a proxy. In this case, you can connect directly to the main server and avoid proxy latency.\nHere’s an example SSH config setup:\ncat ~/.ssh/config\n\nHost 11.6.3.*\n  User bob\n  ServerAliveInterval 30\n  \n  \ncat ~/.ssh/config_proxy\n\nHost 11.6.3.*\n  User bob\n  ServerAliveInterval 30\n  ProxyJump 108.177.126.0\nFor quick switching, we use a Bash script called con. Create the directory and file ~/username/bash_scripts/con, and add the following content:\n#!/bin/bash\n\nserver=$1\nwith_proxy=$2\n\n\nif [ \"$with_proxy\" == \"\" ]; then\n    ssh -Y bob@11.6.3.$server -t \"bash\"\nelse\n    ssh -Y bob@11.6.3.$server -F ~/.ssh/config_proxy -t \"bash\"\nfi\n-Y enables X11 forwarding so you can open GUI windows on your local machine, and -t \"bash\" forces a Bash shell on the server if the default login shell is different.\nNow make the script executable so you can run it:\nchmod u+x ~/username/bash_scripts/con\nAdd the script directory to your PATH so that the con command is available everywhere. Open (or create) ~/.bashrc (on macOS, ~/.bash_profile or ~/.zshrc) and add:\nexport PATH=\"$PATH:/home/username/bash_scripts/\"\nNow use:\n\nInside the network\n\ncon 10 \nYou will connect to the host 11.6.3.10\n\nOutside (through the proxy):\n\ncon 10 anysymbol\nThe second argument can be any string—it simply tells the script to use the config_proxy configuration. This makes the command simpler: without an argument → direct connection; with an argument → via the proxy.\nHere’s what it looks like for the author:\n\n\n\n\n\n\nFigure 2"
  },
  {
    "objectID": "posts/remote_workflow_part1/rw1_ru.html",
    "href": "posts/remote_workflow_part1/rw1_ru.html",
    "title": "Remote workflow (part 1)",
    "section": "",
    "text": "English version"
  },
  {
    "objectID": "posts/remote_workflow_part1/rw1_ru.html#упрощённая-авторизация",
    "href": "posts/remote_workflow_part1/rw1_ru.html#упрощённая-авторизация",
    "title": "Remote workflow (part 1)",
    "section": "Упрощённая авторизация",
    "text": "Упрощённая авторизация\nЧтобы не вводить пароль от каждого сервера (основного и прокси), настроим автоматический ProxyJump и вход по ключу.\n\nАвтоматический вход через прокси-сервер\nНа локальной машине откройте файл ~/.ssh/config в любом текстовом редакторе, а если файла нет, то создайте его. Допустим, у нас несколько основных серверов, у которых IP-адреса 11.6.3.10, 11.6.3.11 и т.п., прокси сервер имеет адрес 108.177.126.0, а имя пользователя bob. Тогда введем в этот файл:\nHost 11.6.3.*\n    User bob\n    ProxyJump 108.177.126.0\nТеперь достаточно ввести:\nssh 11.6.3.10\n— и подключение пойдёт через прокси. По-прежнему потребуется ввод паролей, поэтому настроим вход по ключу.\n\n\nВход по SSH-ключу\nСгенерируем ssh-ключ на локальной машине:\nssh-keygen -t rsa\n\n\n\n\n\n\nRSA vs Ed25519\n\n\n\n\n\nРекомендуется использовать более современный алгоритм генерации ключа Ed25519, вместо RSA, так как он короче, быстрее генерируется и даёт такую же или более высокую криптостойкость при меньшем размере ключа. Пример:\nssh-keygen -t ed25519\nRSA же является более совместимым со старыми серверами.\n\n\n\nЖмём Enter для пути по умолчанию. Можно задать короткую passphrase — например 2–3 буквы и цифры - или оставить пустой (не рекомендуется).\nПосле этого сгенерируется ключ, на который можно посмотреть здесь\ncat ~/.ssh/id_rsa.pub\nТеперь необходимо скопировать этот ключ на прокси-сервер и на основной сервер. Воспользуемся командами:\n# копируем ssh-ключ на прокси сервер\nssh-copy-id -i ~/.ssh/id_rsa.pub bob@108.177.126.0\n\n# на основной сервер\nssh-copy-id -i ~/.ssh/id_rsa.pub bob@11.6.3.10\nЕсли всё получилось правильно, то команда\nssh 11.6.3.10\nработает с короткой passphrase.\n\n\n\n\n\n\nTip\n\n\n\n\n\nЕсли вам приходится часто подключаться к серверам, то вы можете воспользоваться командой ssh-add, чтобы он “подкладывал” ssh-ключи утилите ssh без ввода passphrase. Список полезных команд:\n# хранит ключ ровно столько, сколько живет сам `ssh-agent`\nssh-add \n\n# если видите список ключей - агент активен\nssh-add -l   \n\n# хранит ключ 8 часов\nssh-add -t 8h\n\n\n\n\n\nАльтернативный подход\nЕсли вы подключены к офисному Wi-Fi или по корпоративному VPN, то вы скорее всего находитесь внутри сети, поэтому сервера доступны без прокси сервера. Поэтому можно подключаться напрямую к основному серверу, избегая задержек на прокси.\nПредлагается использовать такую конфигурацию ssh конфигов:\ncat ~/.ssh/config\n\nHost 11.6.3.*\n    User bob\n  ServerAliveInterval 30\n  \n  \ncat ~/.ssh/config_proxy\n\nHost 11.6.3.*\n    User bob\n    ServerAliveInterval 30\n    ProxyJump 108.177.126.0\nДля быстрого переключения используется bash скрипт, назовем его con. Создадим файл (и папку) ~/username/bash_scripts/con, запишем в него:\n#!/bin/bash\n\nserver=$1\nwith_proxy=$2\n\n\nif [ \"$with_proxy\" == \"\" ]; then\n    ssh -Y bob@11.6.3.$server -t \"bash\"\nelse\n    ssh -Y bob@11.6.3.$server -F ~/.ssh/config_proxy -t \"bash\"\nfi\n-Y — позволяет открывать X11 окна на локальной машине, -t \"bash\" — открывает bash оболочку на сервере, если по умолчанию на сервере стоит другая.\nТеперь этот файл нужно сделать исполняемым, чтобы его можно было запускать:\nchmod u+x ~/username/bash_scripts/con\nДобавьте путь к скрипту в переменную PATH, чтобы команда con была видна не только в папке, где лежит этот скрипт. Для этого откройте файл (или создайте, если его нет) ~/.bashrc (для macOS это ~/.bash_profile или ~/.zshrc) и вставьте строку:\nexport PATH=\"$PATH:/home/username/bash_scripts/\"\nТеперь используем:\n\nвнутри сети\n\ncon 10 \nВы попадете на машину 11.6.3.10\n\nИзвне (через прокси):\n\ncon 10 anysymbol\nВторой аргумент может быть любым символом — он просто сигнализирует скрипту выбрать конфиг config_proxy. Логика упрощает ввод: без аргумента — прямое подключение, с аргументом — через прокси\nКак это выглядит у автора:\n\n\n\n\n\n\nFigure 2"
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing.html",
    "href": "posts/iraf_spec_processing/iraf_spec_processing.html",
    "title": "IRAF: Optical Spectrum Processing",
    "section": "",
    "text": "Russian version"
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing.html#bias-averaging",
    "href": "posts/iraf_spec_processing/iraf_spec_processing.html#bias-averaging",
    "title": "IRAF: Optical Spectrum Processing",
    "section": "2.1 Bias Averaging",
    "text": "2.1 Bias Averaging\nCreate a folder for spectral bias files and copy them in:\nmkdir biassp\ncp `cat .log | grep '1024 200' | grep bias | grep 0.0000 | grep -v flat | awk '{print$3}'` biassp/\nCheck the bias frames before combining:\ncd biassp/\nls *.fit &gt; list.biassp\ngedit list.biassp & # optional to remove \"bad\" bias frames\nds9 &\nxs `cat list.biassp`\nBefore averaging, we must fix FITS header keys because the GAIN value is incorrect. Run:\n../bin/repair_tfosc_andor_keys *.fit\nCombine bias frames using median in IRAF (noao.imred.ccdred):\nepar zerocombine\ninput=@list.biassp\noutput=Biassp2.fits\ncombine=median\nRun:go, then copy the result:\nСкопируем Biassp2.fits в папку ../Caldata\ncp Biassp2.fits ../Caldata/\nGo to BD+25d4655 and fix header keys again:\n../bin/repair_tfosc_andor_keys *.fit"
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing.html#subtracting-the-averaged-bias",
    "href": "posts/iraf_spec_processing/iraf_spec_processing.html#subtracting-the-averaged-bias",
    "title": "IRAF: Optical Spectrum Processing",
    "section": "2.2 Subtracting the Averaged Bias",
    "text": "2.2 Subtracting the Averaged Bias\nSubtract the averaged bias from all spectra:\n../bin/process *.fit | si"
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing.html#averaging-flat-field-frames",
    "href": "posts/iraf_spec_processing/iraf_spec_processing.html#averaging-flat-field-frames",
    "title": "IRAF: Optical Spectrum Processing",
    "section": "2.3 Averaging Flat Field Frames",
    "text": "2.3 Averaging Flat Field Frames\nIn IRAF, open noao.imred.ccdred:\nepar combine\ninput=@list.flat\noutput=flat\ncombine=average\nRun :go"
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing.html#averaging-fear-lamp-spectra",
    "href": "posts/iraf_spec_processing/iraf_spec_processing.html#averaging-fear-lamp-spectra",
    "title": "IRAF: Optical Spectrum Processing",
    "section": "2.4 Averaging FeAr Lamp Spectra",
    "text": "2.4 Averaging FeAr Lamp Spectra\nIn IRAF, open noao.imred.ccdred:\nepar combine\ninput=@list.neon\noutput=neon\ncombine=average"
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing.html#creating-the-response-function",
    "href": "posts/iraf_spec_processing/iraf_spec_processing.html#creating-the-response-function",
    "title": "IRAF: Optical Spectrum Processing",
    "section": "2.5 Creating the Response Function",
    "text": "2.5 Creating the Response Function\nIn IRAF, open twodspec.longslit:\nepar response\ncalibrat=flat\nnormaliz=flat\nresponse=nflat\nRun :go"
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing.html#dividing-star-spectra-by-flat-field",
    "href": "posts/iraf_spec_processing/iraf_spec_processing.html#dividing-star-spectra-by-flat-field",
    "title": "IRAF: Optical Spectrum Processing",
    "section": "2.6 Dividing Star Spectra by Flat Field",
    "text": "2.6 Dividing Star Spectra by Flat Field\nIn IRAF, open imred.ccdred:\nepar ccdproc\nimages=@list.sp\nflatcor=yes\nflat=nflat.fits\nRun :go"
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing.html#wavelength-calibration",
    "href": "posts/iraf_spec_processing/iraf_spec_processing.html#wavelength-calibration",
    "title": "IRAF: Optical Spectrum Processing",
    "section": "2.7 Wavelength Calibration",
    "text": "2.7 Wavelength Calibration\nIn IRAF, open twodspec.longslit\nepar identify\nimages=neon.fits\nsection=middle line\ncoordli=linelists$idhenear.dat\ncradius=8\n\nepar reidentify\ncradius=8\ncoordli=linelists$idhenear.dat\nreferenc=neon\nimages=neon\nepar fitcoords\nimages=neon\nRemove bad points with d p\ny y r\ny``r``r\n\nEverything fits well."
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing.html#applying-wavelength-calibration-to-star-spectra",
    "href": "posts/iraf_spec_processing/iraf_spec_processing.html#applying-wavelength-calibration-to-star-spectra",
    "title": "IRAF: Optical Spectrum Processing",
    "section": "2.8 Applying Wavelength Calibration to Star Spectra",
    "text": "2.8 Applying Wavelength Calibration to Star Spectra\nTransform the spectra using the solution from fitcoords:\nepar transform\ninput=@list.sp\noutput=tr//@list.sp\nfitnames=neon\nRun :go\n\nNote: in the database folder, files fcfear, idfear are created even though fitnames=fear"
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing.html#cosmic-ray-removal",
    "href": "posts/iraf_spec_processing/iraf_spec_processing.html#cosmic-ray-removal",
    "title": "IRAF: Optical Spectrum Processing",
    "section": "2.9 Cosmic Ray Removal",
    "text": "2.9 Cosmic Ray Removal\n ~uskov/runTmp/do_cleancrspec trfosc025*.fit"
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing.html#aligning-star-spectra-for-stacking",
    "href": "posts/iraf_spec_processing/iraf_spec_processing.html#aligning-star-spectra-for-stacking",
    "title": "IRAF: Optical Spectrum Processing",
    "section": "2.10 Aligning Star Spectra for Stacking",
    "text": "2.10 Aligning Star Spectra for Stacking\nIn IRAF package iki, use the alignspectra command:\nepar alignspec\nimages=tr//@list.sp\nrefimage=trfosc0254.fit\nprefix=rg\nimreg=[160:670,85:145] # region used for alignment\n\nFor BTA data, a better region is [500:3000, 300:700]"
  },
  {
    "objectID": "posts/iraf_spec_processing/iraf_spec_processing.html#combining-aligned-spectra",
    "href": "posts/iraf_spec_processing/iraf_spec_processing.html#combining-aligned-spectra",
    "title": "IRAF: Optical Spectrum Processing",
    "section": "2.11 Combining Aligned Spectra",
    "text": "2.11 Combining Aligned Spectra\nIn IRAF imred.ccdred:\ncombine input=rgtr//@list.sp output=sp.fits"
  },
  {
    "objectID": "posts/useful_links/useful_links.html",
    "href": "posts/useful_links/useful_links.html",
    "title": "Useful Links & Materials",
    "section": "",
    "text": "Computational Astronomy\nBayesian Models for Astrophysical Data: Using R, JAGS, Python, and Stan\nModern Statistical Methods for Astronomy: With R Applications\nExtragalactic Astronomy and Cosmology"
  },
  {
    "objectID": "posts/useful_links/useful_links.html#regular-expressions",
    "href": "posts/useful_links/useful_links.html#regular-expressions",
    "title": "Useful Links & Materials",
    "section": "Regular expressions",
    "text": "Regular expressions\n\nRegexOne. Learn Regular Expressions with simple, interactive exercises\nregex101"
  },
  {
    "objectID": "posts/useful_links/useful_links.html#stories",
    "href": "posts/useful_links/useful_links.html#stories",
    "title": "Useful Links & Materials",
    "section": "Stories",
    "text": "Stories\n\nUsing AWK and R to parse 25tb\npanstarrs — my R package, featured in February 2022: “Top 40” New CRAN Packages by R Views"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Grigory Uskov",
    "section": "",
    "text": "Remote workflow (part 1)\n\n\n\nunix\n\nssh\n\n\n\nConnecting to a server via SSH, ProxyJump, ssh-agent and a bash helper script for one-command login\n\n\n\n\n\nMay 14, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nUseful Links & Materials\n\n\n\nastronomy\n\nstatistics\n\nr\n\npython\n\n\n\nThings Worth Sharing\n\n\n\n\n\nJun 7, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nIRAF: Optical Spectrum Processing\n\n\n\nastronomy\n\niraf\n\nunix\n\n\n\nUsing Data from the RTT-150 Telescope at TUBITAK Observatory\n\n\n\n\n\nAug 18, 2020\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About",
    "section": "Education",
    "text": "Education\nIKI RAS (Space Research Institute of the Russian Academy of Sciences) | Moscow, Russia\nAugust 2019 - September 2023\nKazan Federal University | Kazan, Russia\nSeptember 2013 - June 2019"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "About",
    "section": "Experience",
    "text": "Experience\nIKI RAS | Junior research assistant | - Present\nIKI RAS | Engineer |"
  }
]